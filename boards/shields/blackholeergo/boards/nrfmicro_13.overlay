#include <dt-bindings/led/led.h>

/{
    chosen {
        // zmk,display = &oled_display;  // NO! This should be in blackholeergo.dtsi
        // We'll define the display in the shield .dtsi, NOT here.
    };
}; // Added closing brace and semicolon for the root node

&pinctrl {
    // I2C Pin Control (for OLED)
    i2c0_default: i2c0_default {
        group1 {
            psels = <NRF_PSEL(TWIM_SDA, 0, 17)>,  // P0.17 for SDA
                    <NRF_PSEL(TWIM_SCL, 0, 20)>;  // P0.20 for SCL
        };
    };

    i2c0_sleep: i2c0_sleep {
        group1 {
            psels = <NRF_PSEL(TWIM_SDA, 0, 17)>,
                    <NRF_PSEL(TWIM_SCL, 0, 20)>;
            low-power-enable;
        };
    };

    // Keep SPI Pin Control for LED Strip (if you're using it)
    led_spi_default: led_spi_default {
        group1 {
            psels = <NRF_PSEL(SPIM_MOSI, 0, 6)>; // Assuming P0.06 for LED MOSI
        };
    };

    led_spi_sleep: led_spi_sleep {
        group1 {
            psels = <NRF_PSEL(SPIM_MOSI, 0, 6)>;
            low-power-enable;
        };
    };
};

//  LED strip 
&spi2 {
    compatible = "nordic,nrf-spim";
    status = "okay";
    pinctrl-0 = <&led_spi_default>;
    pinctrl-1 = <&led_spi_sleep>;
    pinctrl-names = "default", "sleep";
    // spi-max-frequency = <4000000>; // Set the maximum SPI frequency, important for WS2812

    led_strip: ws2812@0 {
        compatible = "worldsemi,ws2812";
        label = "LED_STRIP";
        reg = <0>; // Chip select (not used for single device on bus)

        // Chain length: adjust this to the number of LEDs in your strip
        chain-length = <10>;  //  CHANGE THIS to your actual LED count!

        // SPI bus configuration
        spi-max-frequency = <4000000>; // WS2812 requires a specific timing, 4MHz often works well

        // Color mapping (GRB is typical for WS2812)
        color-mapping = <LED_COLOR_ID_GREEN
                         LED_COLOR_ID_RED
                         LED_COLOR_ID_BLUE>;
    };
};